{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/hooks.ts","contexts/RefferalContext.tsx","utils/getRpcUrl.ts","utils/erc20.ts","contexts/RefreshContext.tsx","state/actions.ts","hooks/useTokenBalance.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Page.tsx","components/UnlockButton.tsx","utils/addressHelpers.ts","components/layout/Container.tsx","utils/multicall.ts","config/constants/contracts.ts","config/constants/types.ts","hooks/useRefresh.ts","utils/web3.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","components/TopBar/TopBar.tsx","views/Refferals/Refferals.tsx","components/BottomBar/BottomBar.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx","contexts/Localisation/translationsContext.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAddresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","MumuPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","harvestInterval","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","ZERO","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","val","BNB","CAKE","plus","RefferalContext","React","createContext","refferalAddress","RefferalContextProvider","children","useState","setRefferalAddress","query","queryString","parse","document","location","search","ref","atob","Provider","nodes","process","getNodeUrl","randomIndex","random","getContract","provider","Web3","eth","Contract","getAllowance","lpContract","masterChefContract","methods","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","getTotalReferrals","web3","addresses","referral","Referral","referralsCount","getTotalReferralCommissions","totalReferralCommissions","RefreshContext","slow","fast","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","useTotalSupply","totalSupply","setTotalSupply","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useLPBnbamount1","pairContract","PancakePair","getLP1Address","getReserves","useLPBnbamount2","getLP2Address","useGetTotalSupply1","useGetTotalSupply2","useTotalLockedRewards","masterchefContract","totalLockedUpRewards","useMaxTxAmount","maxTransferAmount","useTransferTax","transferTaxRate","useTotalReferrals","useWallet","ethereum","fastRefresh","res","useTotalReferralCommissions","useTokenBalance","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","Page","styled","Container","theme","mediaQueries","sm","lg","UnlockButton","props","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","cake","chainId","masterChef","getGettingtimeAddress","gettingtime","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","pancakepair1","pancakepair2","abi","getWeb3","multi","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","decodeFunctionResult","56","97","busd","PoolCategory","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","contractOptions","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingHelium3","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","concat","Menu","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","StyledTopBar","TopBar","src","alt","style","height","position","right","bottom","opacity","fontSize","color","textAlign","marginTop","MainContainer","CardGrid","BaseLayout","Heading","borderColor","Body","Refferals","TotalReferrals","myTotalReferralCommissions","TotalReferralCommissionsValue","toLocaleString","minimumFractionDigits","refferalsLink","btoa","copyText","setCopyText","gridColumn","lineHeight","navigator","clipboard","writeText","setTimeout","margin","padding","BottomBar","Home","lazy","Farms","Lottery","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","tokenMode","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","defaultTranslationState"],"mappings":"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","file":"static/js/main.6c711eea.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        \n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, MumuPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'MumuPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        harvestInterval: info.harvestInterval,\n        MumuPerBlock: new BigNumber(MumuPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingMumu',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserAllowances,\n  fetchFarmUserEarnings,\n  fetchFarmUserStakedBalances,\n  fetchFarmUserTokenBalances,\n} from './fetchFarmUser'\nimport { Farm, FarmsState } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { Farm, Pool, State } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n  // return farm.tokenPriceVsQuote ? new BigNumber(0) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      if(val.toString() !== 'NaN' && val.toString() !== 'Infinity')\n        value = value.plus(val);\n    }\n  }\n  return value;\n}","import React, { useEffect, useState } from 'react'\nimport queryString from 'querystring'\n\nconst RefferalContext = React.createContext({ refferalAddress: \"\" })\n\nconst RefferalContextProvider = ({ children }) => {\n  const [refferalAddress, setRefferalAddress] = useState(\"\")\n\n  useEffect(()=>{\n    const query = queryString.parse(document.location.search);\n    if(query['?ref'])\n    {\n      const ref = query['?ref'].toString()\n      setRefferalAddress(atob(ref))\n    }\n  },[setRefferalAddress])\n\n  return (\n    <RefferalContext.Provider value={{ refferalAddress }}>\n      {children}\n    </RefferalContext.Provider>\n  )\n}\n\nexport { RefferalContext, RefferalContextProvider }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\nimport Referral from 'config/abi/referral.json'\nimport addresses from 'config/constants/contracts'\n\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n\n\nexport const getTotalReferrals = async (\n  provider: ProviderType,\n  userAddress: string,\n): Promise<string> => {\n  const web3 = new Web3(provider)\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const address = addresses.referral[chainId]\n  const contract = new web3.eth.Contract((Referral as unknown) as AbiItem, address)\n  try {\n    const balance: string = await contract.methods.referralsCount(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTotalReferralCommissions = async (\n  provider: ProviderType,\n  userAddress: string,\n): Promise<string> => {\n  const web3 = new Web3(provider)\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const address = addresses.referral[chainId]\n  const contract = new web3.eth.Contract((Referral as unknown) as AbiItem, address)\n  try {\n    const balance: string = await contract.methods.totalReferralCommissions(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import React, { useEffect, useState } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport PancakePair from 'config/abi/PancakePair.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance, getTotalReferralCommissions, getTotalReferrals } from 'utils/erc20'\nimport { getCakeAddress, getLP1Address, getLP2Address, getMasterChefAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useLPBnbamount1 = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const pairContract = getContract(PancakePair, getLP1Address())\n      const bal = await pairContract.methods.getReserves().call()\n      setBalance(new BigNumber(bal[1]))\n    }\n    fetchBalance()\n  }, [slowRefresh])\n  \n  return balance\n}\n\nexport const useLPBnbamount2 = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const pairContract = getContract(PancakePair, getLP2Address())\n      const bal = await pairContract.methods.getReserves().call()\n      setBalance(new BigNumber(bal[1]))\n    }   \n    fetchBalance()\n  }, [slowRefresh])\n  \n  return balance\n}\n\n\nexport const useGetTotalSupply1 = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const pairContract = getContract(PancakePair, getLP1Address())\n      const bal = await pairContract.methods.totalSupply().call()\n      setBalance(new BigNumber(bal))\n    }\n    fetchBalance()\n  }, [slowRefresh])\n  \n  return balance\n}\n\nexport const useGetTotalSupply2 = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const pairContract = getContract(PancakePair, getLP2Address())\n      const bal = await pairContract.methods.totalSupply().call()\n      setBalance(new BigNumber(bal))\n    }\n    fetchBalance()\n  }, [slowRefresh])\n  \n  return balance\n}\n\nexport const useTotalLockedRewards = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const masterchefContract = getContract(masterchefABI, getMasterChefAddress())\n      const supply = await masterchefContract.methods.totalLockedUpRewards().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useMaxTxAmount = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.maxTransferAmount().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useTransferTax = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.transferTaxRate().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useTotalReferrals = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalReferrals(ethereum, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalReferralCommissions = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalReferralCommissions(ethereum, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  margin-top: -20px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-size: auto 100%; \n  background-attachment: fixed;\n  background-position: center;\n  min-height: calc(100vh - 280px);\n  // max-width: initial;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n    background-size: 100% 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getGettingtimeAddress = () => {\n  return addresses.gettingtime[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getLP1Address = () => {\n  return addresses.pancakepair1[chainId]\n}\nexport const getLP2Address = () => {\n  return addresses.pancakepair2[chainId]\n}\n\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 100%;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  cake: {\n    56: '0x9d7576D8549f6E481170D149d9Cd456Cfe817593',\n    97: '0x9E0d46143303dE7296e68F38936564ce195FF04f',\n  },\n  masterChef: {\n    56: '0x2A4b2E261A847fAeBf6e7381BE3Eb8A59c6F1982',\n    97: '0xE28855750CBcF8B4720ab3DADe9CF926A16Ba90B',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n  },\n  lottery: {\n    56: '0x194E62DaCCd0EdEA9389839b33b67362D5286816',\n    97: '0x1Bced8f36247bF555E8EA455327F425a8587C650',\n  },\n  lotteryNFT: {\n    56: '0x3D20a07A8256E2B293f14a41a48cbd47C0F6B26B',\n    97: '0x6cb680029D3d4DD59c26E3dfd4459788806d50B2',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xD500E3CF845CC41ABa54bB1dD426bD3485bD8Cd5',\n  },\n  pancakepair1: {\n    56: '0x8347397e40D565eE43c3348188f079623D1A5Cb8',// TOKEN-BNB LP\n    97: '0x6cb680029D3d4DD59c26E3dfd4459788806d50B2',\n  },\n  pancakepair2: {\n    56: '0x21CE11D6bfcB4088B0E28c265AD79A7Af2814B9f',// TOKEN-BUSD LP\n    97: '0x8acEe19Fa508f9Bfded71e55d457cC9AE05Ad116',\n  },\n  referral: {\n    56: '0x9467eCACFe7373Bcb10eA0D0bDaD5B9e937867cE',\n    97: '0x8E5468F91cC6BFCfB6f1C5DF0b27263276084426',\n  },\n  gettingtime: {\n    56: '0xdE2488b53468eBF4aeF566719817dDe0231aF466',\n    97: '0x61C4eC1435967BcE357069E876978E4c599EF90D',\n  },\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAddresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { PoolConfig } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingHelium3('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserPendingRewards,\n  fetchUserStakeBalances,\n} from './fetchPoolsUser'\nimport { Pool, PoolsState } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'Mumu-BUSD LP',\n    lpAddresses: {\n      97: '0x8acEe19Fa508f9Bfded71e55d457cC9AE05Ad116',\n      56: '0x21CE11D6bfcB4088B0E28c265AD79A7Af2814B9f',\n    },\n    tokenSymbol: 'Mumu',\n    tokenAddresses: {\n      97: '0x9E0d46143303dE7296e68F38936564ce195FF04f',\n      56: '0x9d7576D8549f6E481170D149d9Cd456Cfe817593',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'Mumu-BNB LP',\n    lpAddresses: {\n      97: '0xf40800a2303606c01eb08086ed479b87ac9c34e1',\n      56: '0x8347397e40D565eE43c3348188f079623D1A5Cb8',\n    },\n    tokenSymbol: 'Mumu',\n    tokenAddresses: {\n      97: '0x9E0d46143303dE7296e68F38936564ce195FF04f',\n      56: '0x9d7576D8549f6E481170D149d9Cd456Cfe817593',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAddresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xa79fe8865fb3c3c053ee63ba8b7f90dda5c3f334',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  }, /*\n  {\n    pid: 4,\n    risk: 4,\n    lpSymbol: 'BNB-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAddresses: contracts.wbnb,\n  },\n  {\n    pid: 5,\n    risk: 4,\n    lpSymbol: 'BNB-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAddresses: contracts.wbnb,\n  }, */\n  {\n    pid: 3,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'Mumu',\n    lpAddresses: {\n      97: '0x8acEe19Fa508f9Bfded71e55d457cC9AE05Ad116',\n      56: '0xb3fed4405d8131e38a9101537ced45853aad4621', // EGG-BUSD LP\n    },\n    tokenSymbol: 'Mumu',\n    tokenAddresses: {\n      97: '0x9E0d46143303dE7296e68F38936564ce195FF04f',\n      56: '0x9d7576D8549f6E481170D149d9Cd456Cfe817593',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },/*\n  {\n    pid: 11,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BNB-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },  \n  {\n    pid: 7,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '',\n      56: '0xf8593167D7ccc1Dc6e99Ab1C3792032F40093bBf', // EGG-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },\n  {\n    pid: 3,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },\n  // {\n  //   pid: 6,\n  //   risk: 2,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'BTCB',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xf8593167D7ccc1Dc6e99Ab1C3792032F40093bBf', // BTCB-BUSD LP\n  //   },\n  //   tokenSymbol: 'BTCB',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAddresses: contracts.busd,\n  // },  \n  {\n    pid: 8,\n    risk: 4,\n    isTokenOnly: true,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '',\n      56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458', // CAKE-BUSD LP\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },\n  {\n    pid: 9,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAddresses: contracts.busd,\n  },\n  */\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: inherit;\n    letter-spacing: 0.1em !important;\n  }\n  @font-face {\n    font-family: \"Bunny\";\n    src: url(/fonts/bunny/bunny.ttf);\n  } \n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n    font-family: Bunny;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useEffect, useState } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { dark, light } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\nimport { getCakeAddress } from '../../utils/addressHelpers'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/craters',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://dex.mumuswap.finance/#/swap'\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://dex.mumuswap.finance/#/pool'\n      }\n    ]\n  },\n  {\n    label: 'Referrals',\n    icon: 'GroupsIcon',\n    href: '/referrals',\n  },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'Features',\n    icon: 'PriceGuardIcon',\n    items: [\n      {\n        label: 'Automatic LP',\n        href: 'https://docs.mumuswap.finance/',\n      },\n      {\n        label: 'Automatic Burning',\n        href: 'https://docs.mumuswap.finance/automatic-burning',\n      },\n      {\n        label: 'Referral Program',\n        href: 'https://docs.mumuswap.finance/referral-program',\n      },\n      {\n        label: 'Anti Whale',\n        href: 'https://docs.mumuswap.finance/anti-whale',\n      },\n    ],\n  },\n  {\n    label: 'Listing',\n    icon: 'ListingIcon',\n    items: [\n      {\n        label: 'BscScan',\n        href: 'https://bscscan.com/address/'.concat(getCakeAddress()),\n      }\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/mumuswap/',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.mumuswap.finance/',\n      },\n      {\n        label: 'Roadmap',\n        href: 'https://docs.mumuswap.finance/roadmap',\n      },\n      {\n        label: 'Blog',\n        href: 'https://mumuswap.medium.com',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/address/0x8d9087a2B7E446bb69343542e1430E974f12a18F\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nconst TopBar: React.FC = () => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <StyledTopBar>\r\n      <img src=\"/images/1.svg\" alt=\"bunny\" style={{ height: '100%',position: 'absolute',right:'5%',bottom:'0',opacity:'0.6'}}/>\r\n      <div style={{fontSize: \"40px\", color: theme.colors.text, textAlign: \"center\"}}>Mumuswap</div>\r\n      <div style={{fontSize: \"16px\", color: theme.colors.text, textAlign: \"center\", marginTop: \"1em\"}}>The first Space based Auto Liquidity Aquisition Yield Farm</div>\r\n    </StyledTopBar>\r\n  )\r\n}\r\n\r\nconst StyledTopBar = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  background-image: url('/images/header.jpg');\r\n  background-size: 100% 100%;\r\n  background-position: top;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  padding-top: 50px;\r\n  margin-top: 64px;\r\n  z-index: 1;\r\n  @media (max-width: 968px) {\r\n    background-size: auto 100%;\r\n    background-position: center;\r\n  }\r\n  & > div{\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nexport default TopBar\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout, Button, Card, Link } from '@pancakeswap-libs/uikit'\r\nimport { useTotalReferralCommissions, useTotalReferrals } from '../../hooks/useTokenBalance'\r\nimport UnlockButton from '../../components/UnlockButton'\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 24px;\r\n`\r\nconst CardGrid = styled(BaseLayout)`\r\n  grid-gap: 2em;\r\n  & > div {\r\n    grid-column: span 6\r\n  }\r\n`\r\n\r\nconst Heading = styled.div`\r\n  padding: 24px;\r\n  font-size: 1.5em;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Body = styled.div`\r\n  padding: 24px;\r\n`\r\n\r\nconst Refferals = () => {\r\n  const { account } = useWallet()\r\n  const myTotalReferrals = useTotalReferrals(account);\r\n  const TotalReferrals = myTotalReferrals.toNumber();\r\n  const myTotalReferralCommissions = useTotalReferralCommissions(account);\r\n  const TotalReferralCommissionsValue = myTotalReferralCommissions.toNumber() === 0?'0':((myTotalReferralCommissions.toNumber()/1000000000000000000)).toLocaleString('en-US', {minimumFractionDigits: 3})\r\n  const refferalsLink = \"http://mumuswap.finance/?ref=\".concat(btoa(account))\r\n  const [copyText, setCopyText] = useState(\"Copy\")\r\n  const handleCopy = ()=>{\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(refferalsLink);\r\n      setCopyText(\"Copied\");\r\n      setTimeout(function() {\r\n        setCopyText(\"Copy\");\r\n      }, 1000);\r\n    }\r\n  }\r\n  return (\r\n    <MainContainer>\r\n        {!account ?\r\n          (\r\n            <Card style={{ textAlign: 'center', padding: '24px' }}>\r\n              <UnlockButton/>\r\n              <div style={{ marginTop: '1em' }}>\r\n                Unlock wallet to get your unique referral link\r\n              </div>\r\n            </Card>\r\n          )\r\n          : (\r\n            <CardGrid>\r\n              <Card>\r\n                <Heading>\r\n                  Total Referrals\r\n                </Heading>\r\n                <Body>\r\n                  {TotalReferrals}\r\n                </Body>\r\n              </Card>\r\n              <Card>\r\n                <Heading>\r\n                  Total Referral Commissions\r\n                </Heading>\r\n                <Body>\r\n                {TotalReferralCommissionsValue}\r\n                </Body>\r\n              </Card>\r\n              <Card style={{gridColumn: 'span 12'}}>\r\n                <Heading>\r\n                  <div style={{lineHeight: \"1.6em\"}}>\r\n                    Your Referral Link\r\n                  </div>\r\n                  <Button style={{marginTop: \"-0.5em\"}} onClick={handleCopy}>\r\n                    {copyText}\r\n                  </Button>\r\n                </Heading>\r\n                <Body>\r\n                  <Link href={refferalsLink} style={{margin: \"0 auto\"}}>\r\n                    {refferalsLink}\r\n                  </Link>\r\n                </Body>\r\n              </Card>\r\n            </CardGrid>\r\n          )\r\n        }\r\n    </MainContainer>\r\n  )\r\n}\r\nexport default Refferals","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { RefferalContext } from '../../contexts/RefferalContext'\r\n\r\nconst BottomBar: React.FC = () => {\r\n  const { refferalAddress } = useContext(RefferalContext)\r\n  return (\r\n    <StyledTopBar>\r\n      {refferalAddress&&<Text color=\"textSubtle\" fontSize=\"md\">Ref by: {refferalAddress}</Text>}\r\n    </StyledTopBar>\r\n  )\r\n}\r\n\r\nconst StyledTopBar = styled.div`\r\n  height: max-content;\r\n  text-align: center;\r\n  width: 100%;\r\n`\r\n\r\nexport default BottomBar\r\n","import React, { lazy, Suspense, useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\nimport TopBar from './components/TopBar'\nimport Refferals from './views/Refferals'\nimport { RefferalContext } from './contexts/RefferalContext'\nimport BottomBar from './components/BottomBar'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <TopBar />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/Craters\">\n              <Farms tokenMode/>\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/referrals\">\n              <Refferals />\n            </Route>\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n          <BottomBar/>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\nimport { RefferalContextProvider } from './contexts/RefferalContext'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <RefferalContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefferalContextProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport styled from 'styled-components'\nimport App from './App'\nimport Providers from './Providers'\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  min-height:100vh;\n`\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <Container>\n       <App /> \n      </Container>\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}