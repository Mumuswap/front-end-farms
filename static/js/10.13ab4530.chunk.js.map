{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useApprove.ts","components/Input/Input.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","api/lottery/generateLotteryDate.ts","api/lottery/web3.ts","api/lottery/PromiseBatchRequest.ts","api/lottery/lotteryRates.ts","api/lottery/constants.ts","api/lottery/lotteryUtils.ts","api/lottery/mathUtils.ts","api/lottery/singleLottery.ts","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","api/lottery/lotteryHistory.ts","views/Lottery/Lottery.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Wrapper","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","fontSize","defaultProps","useApprove","lpContract","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","BigNumber","times","pow","toString","send","from","on","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","useEffect","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","Title","Heading","attrs","as","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","fetchBalance","useWinningNumbers","winngNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","background","TextWrapper","StyledText","img","md","NoPrizesContent","width","margin","StyledCard","Card","isDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","boxShadow","textAlign","padding","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","useLotteryAllowance","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","className","toNumber","isSecondCard","CardHeader","TicketCountWrapper","justifyContent","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","paddingBottom","mb","alignItems","height","marginTop","fontWeight","paddingTop","text","display","border","Link","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","secondary","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","href","target","LayoutWrapper","StyledLink","Image","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","gridColumn","firstLottery","UTC","hour","generateLotteryDate","lotteryDate","setTime","BSC_NODE_RPC","provider","process","Web3","providers","HttpProvider","timeout","getContract","PromisifyBatchRequest","batch","requests","add","_request","that","request","Promise","resolve","reject","err","data","execute","all","this","BatchRequest","rates","burn","jackpot","match3","match2","match1","ratesV2","ratesV1","LOTTERY_CONTRACT","getSingleLotteryBatch","lotteryABI","batch2","x","numbers1","numbers2","createLotteryItem","numbers1Prom","numbers2Prom","finalNumbers","numbers2Res","getIssueIndex","retryIsseIndex","errorMessage","getRates","getAllLotteries","finalNumbersProm","computeLotteries","retry","retries","retrySuccess","retryCount","log","ceilDecimal","decimal","multiplier","ceil","Lottery","maxLotteryNumber","ratesToUse","ticketPrice","poolSize","lottery","lotteryNumbers","burned","contractLink","jackpotTicket","match3Ticket","match2Ticket","match1Ticket","poolJackpot","poolMatch3","poolMatch2","poolMatch1","getLotteryRoundData","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","formatLotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","backgroundColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","failure","axesStyles","borderCapStyle","gridLines","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","PastDrawsPage","lotteryHistory","allLotteries","history","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/10.13ab4530.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold fontSize=\"20px\">\n        {expanded ? 'Hide' : 'Details'}\n        {expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\n      </Text>\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useCake, useLottery, useMasterchef, useSousChef } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useEffect, useState } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  return currentHour + 1;\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  // const msBetweenLotteries = 43200000\n  const msBetweenLotteries = 3600000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawStep,\n  getLotteryDrawTime,\n  getTicketSaleStep,\n  getTicketSaleTime,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"primary\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"primary\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"primary\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-color: rgba(243,200,102,0.2);\n  border-radius: 10px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 25px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The Mumu Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with Mumu')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getMatchingRewardLength,\n  getTickets,\n  getTotalClaim,\n  getTotalRewards,\n  getWinningNumbers,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"text\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" color=\"text\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\" color=\"text\">\n              Mumu\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets} style={{background:\"transparent\"}}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { getMax, multiBuy, multiClaim } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      {/* <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" /> */}\n      <TextWrapper style={{width: \"100%\"}}>\n        <StyledText color=\"text\" style={{margin: \"0 auto\"}}>{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets} style={{background:\"transparent\",margin:\"0 auto\"}}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 7%;\n  margin-left: 6%;\n  margin-right: 4%;\n  border: 0px solid ${(props) => props.theme.colors.primary };\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        box-shadow: unset;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 10px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 10px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin} color=\"text\">\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive style={{boxShadow: \"none\"}}>\n      <StyledCardBody>\n        <StyledHeading size=\"md\" style={{textAlign:\"center\",padding: \"10px 0\"}} color=\"primary\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{max.toLocaleString()} {availableSymbol} Available</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMaxNumber, useMultiBuyLottery } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"Mumu\"\n      />\n      <div>\n        <Tips>Your amount must be a multiple of 10 Mumu</Tips>\n        <Tips>1 Ticket = 10 Mumu</Tips>\n      </div>\n      <div>\n        <Announce>         \n          Ticket purchases are final. Your Mumu cannot be returned to you after buying tickets.\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} Mumu`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your Mumu will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  & > button{\n    width: 100%;\n  }    \n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n    display: flex;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"TRIP\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled className=\"imgBtn\">\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove} className=\"imgBtn\">\n            {TranslateString(999, 'Approve Mumu')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n\t\tclassName=\"imgBtn\"\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy} className=\"imgBtn\">\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <div style={{textAlign:\"center\",width: \"100%\"}}>\n          <Button disabled className=\"imgBtn\" style={{margin: \"0 auto\"}}> {TranslateString(999, 'On sale')}</Button>\n        </div>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Text, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n    fill: ${({ theme }) => theme.colors.primary}\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader style={{justifyContent:\"center\"}}>\n          <IconWrapper color=\"text\">\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"text\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\" color=\"text\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"primary\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\" color=\"text\" style={{textAlign:\"center\"}}>{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n  & > div{\n    margin-bottom: 0;\n  }\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"16px\" color=\"primary\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"16px\" color=\"primary\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"16px\" color=\"primary\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading fontSize=\"16px !important\" color=\"text\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading fontSize=\"16px !important\" color=\"text\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading fontSize=\"16px !important\" color=\"text\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold color=\"text\">3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"16px\" bold color=\"text\">{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"16px\" color=\"text\">{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text color=\"text\">2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText fontSize=\"16px\" color=\"text\">{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText fontSize=\"16px\" color=\"text\">{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text fontSize=\"16px\" color=\"text\">{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText fontSize=\"16px\" color=\"text\">{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText fontSize=\"16px\" color=\"text\">{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Card, CardBody, CardFooter, Flex, Heading, PancakeRoundIcon, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '100%')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n  const { colors } = useContext(ThemeContext)\n\n  return (\n    <Card>\n      <CardBody style={{paddingBottom: 0}}>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px',marginBottom: 0,marginTop: '10px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"18px\" style={{ fontWeight: 600,margin: \"0 auto\" }} color=\"text\">{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"22px\" color=\"primary\" style={{paddingTop: '15px'}}>\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\" style={{color:colors.text, display:\"none\"}}>{lotteryPrizeWithCommaSeparators} Hel3</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter style={{border:\"none\", padding: \"10px 50px\",paddingBottom: \"25px\"}}>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useMatchingRewardLength, useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n  const { colors } = useContext(ThemeContext)\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title style={{color:colors.primary,fontSize: \"18px\"}}>\n                {account && lotteryHasDrawn\n                  ? `${TranslateString(570, 'Winning Numbers This Round')}`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index} style={{border: \"2px dashed \".concat(colors.primary)}}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>              \n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://bscscan.com/\" target=\"_blank\" style={{color:colors.primary,fontSize:\"16px\",textAlign:\"center\" }}>\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #2ab770;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  background-size: 100% 100%;\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Image, Link, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;  \n  background-color: rgba(219,172,88,0.2);\n  padding: 0 20px;\n  border-radius: 20px;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"primary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\" color=\"text\">\n        {TranslateString(\n          999,\n          'Spend Mumu to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"#\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 12;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div style={{gridColumn: \"span 1\"}}> </div>\n        <div>\n          <TotalPrizesCard />\n        </div>\n\t      <div style={{gridColumn: \"span 2\"}}> </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n        <div style={{gridColumn: \"span 1\"}}> </div>\n      </Cards>\n      <Cards>\n        <div> </div>\n        <div>\n        <HowItWorks />\n        {/* legacy page content */}\n        <WinningNumbers />\n        </div>\n        <div> </div>\n      </Cards>\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export const firstLottery = new Date(Date.UTC(2020, 9, 23, 14, 0, 0, 0)); // Time of the first Offical Lottery; There are 3 Tests lotteries\nexport const numberOfTestLotteries = 3;\nconst hour = 60 * 60 * 1000;\nexport const generateLotteryDate = (issueIndex: number): Date => {\n  const lotteryDate = new Date(firstLottery);\n  if (issueIndex < 48) {\n    lotteryDate.setTime(lotteryDate.getTime() + (issueIndex - numberOfTestLotteries) * 2 * hour);\n  } else if (issueIndex < 225) {\n    lotteryDate.setTime(lotteryDate.getTime() + (48 - numberOfTestLotteries) * 2 * hour);\n    lotteryDate.setTime(lotteryDate.getTime() + (issueIndex - 47) * 6 * hour);\n  } else {\n    lotteryDate.setTime(lotteryDate.getTime() + (48 - numberOfTestLotteries) * 2 * hour);\n    lotteryDate.setTime(lotteryDate.getTime() + (225 - 48) * 6 * hour);\n    lotteryDate.setTime(lotteryDate.getTime() + (issueIndex - 224) * 12 * hour);\n  }\n  return lotteryDate;\n};\n","import Web3 from 'web3'\n\nconst BSC_NODE_RPC = {\n  \"56\": [\n    \"https://bsc-dataseed.binance.org/\",\n    \"https://bsc-dataseed1.defibit.io/\",\n    \"https://bsc-dataseed1.ninicoin.io/\",\n  ],\n  \"97\": [\n    \"https://data-seed-prebsc-1-s1.binance.org:8545\"\n  ]\n};\n\nexport const getWeb3 = (): Web3 => {\n  const provider: string = BSC_NODE_RPC[process.env.REACT_APP_CHAIN_ID][Math.floor(Math.random() * BSC_NODE_RPC[process.env.REACT_APP_CHAIN_ID].length)];\n\n  return new Web3(new Web3.providers.HttpProvider(provider, { timeout: 30000 }));\n};\n\nexport const getContract = (abi: any, address: string) => {\n  const web3: Web3 = getWeb3();\n\n  return new web3.eth.Contract(abi, address);\n};\n","import Web3 from 'web3'\nimport { BatchRequest } from 'web3-core'\n\nimport { getWeb3 } from './web3'\n\nexport class PromisifyBatchRequest<R> {\n  web3: Web3;\n\n  batch: BatchRequest;\n\n  requests: Array<Promise<R>> = [];\n\n  constructor() {\n    this.web3 = getWeb3();\n    this.batch = new this.web3.BatchRequest();\n  }\n\n  add = (_request: any, ...params: any) => {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const request: Promise<R> = new Promise((resolve, reject) => {\n      that.batch.add(\n        // eslint-disable-next-line consistent-return\n        _request.request(null, (err: any, data: R) => {\n          if (err) return reject(err);\n          resolve(data);\n        })\n      );\n    });\n    this.requests.push(request);\n  };\n\n  execute = async () => {\n    this.batch.execute();\n    // eslint-disable-next-line no-return-await\n    return await Promise.all(this.requests);\n  };\n}\n\nconst p = 1000;\n\nexport default p;\n","export interface Rates {\n  burn: number;\n  jackpot: number;\n  match3: number;\n  match2: number;\n  match1?: number;\n}\n\n// Rates since 348\nexport const rates: Rates = {\n  burn: 15,\n  jackpot: 50,\n  match3: 20,\n  match2: 10,\n  match1: 5,\n};\n\n// Rates between 206 and 347\nexport const ratesV2: Rates = {\n  burn: 20,\n  jackpot: 50,\n  match3: 20,\n  match2: 10,\n};\n\n// Rates between 0 and 205\nexport const ratesV1: Rates = {\n  burn: 10,\n  jackpot: 60,\n  match3: 20,\n  match2: 10,\n};\n","// BEP-20 addresses.\nexport const CAKE = \"0x9d7576D8549f6E481170D149d9Cd456Cfe817593\";\nexport const SYRUP = \"0x009cF7bC57584b7998236eff51b98A168DceA9B0\";\nexport const DEAD = \"0x000000000000000000000000000000000000dEaD\";\n\n// Contract addresses.\nexport const LOTTERY_CONTRACT = \"0x194E62DaCCd0EdEA9389839b33b67362D5286816\";\nexport const MULTICALL_CONTRACT = \"0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb\";\n","import { PromisifyBatchRequest } from './PromiseBatchRequest'\nimport { rates, Rates, ratesV1, ratesV2 } from './lotteryRates'\nimport { LOTTERY_CONTRACT } from './constants'\nimport { getContract } from './web3'\nimport lotteryABI from '../../config/abi/lottery.json'\n\nexport interface SingleLotteryReturn {\n  numbers1: Promise<[string, string, string, string]>;\n  numbers2: Promise<Array<string>>;\n  index: number;\n}\n\nexport interface Lottery {\n  numbers1: [string, string, string, string];\n  numbers2: Array<number>;\n  issueIndex: number;\n}\n\nexport interface SingleLottery {\n  lotteryNumber: number;\n  lotteryDate: Date;\n  poolSize: number;\n  lotteryNumbers: number[];\n  jackpotTicket: number;\n  match3Ticket: number;\n  match2Ticket: number;\n  match1Ticket: number | null;\n  poolJackpot: number;\n  poolMatch3: number;\n  poolMatch2: number;\n  poolMatch1: number | null;\n  burned: number;\n  contractLink: string;\n}\n\nexport interface LotteryHistory {\n  lotteryNumber: number;\n  poolSize: number;\n  burned: number;\n}\n\n/**\n * Request all Lottery Methods to get the Lottery Data\n * This Method is not async and is not waiting\n * This will improve the performance because all requests can be created at almost the same time\n * This is the Batch version of the function. This means the web3 batchrequest functionality is used to batch the requests to the bsc network\n * This Batch functionality prevent the api from crashing because of too many requests against the contract.\n * @param index\n */\nexport const getSingleLotteryBatch = (index: number): SingleLotteryReturn => {\n  const lotteryContract = getContract(lotteryABI, LOTTERY_CONTRACT);\n  const batch = new PromisifyBatchRequest<string>();\n  const batch2 = new PromisifyBatchRequest<string>();\n  [\n    lotteryContract.methods.historyNumbers(index, 0).call,\n    lotteryContract.methods.historyNumbers(index, 1).call,\n    lotteryContract.methods.historyNumbers(index, 2).call,\n    lotteryContract.methods.historyNumbers(index, 3).call,\n  ].map((x) => batch.add(x));\n  if (index >= 349 && index <= 355) {\n    [\n      lotteryContract.methods.historyAmount(index, 0).call,\n      lotteryContract.methods.historyAmount(index, 1).call,\n      lotteryContract.methods.historyAmount(index, 2).call,\n      lotteryContract.methods.historyAmount(index, 3).call,\n      lotteryContract.methods.historyAmount(index, 4).call,\n    ].map((x) => batch2.add(x));\n  } else {\n    [\n      lotteryContract.methods.historyAmount(index, 0).call,\n      lotteryContract.methods.historyAmount(index, 1).call,\n      lotteryContract.methods.historyAmount(index, 2).call,\n      lotteryContract.methods.historyAmount(index, 3).call,\n    ].map((x) => batch2.add(x));\n  }\n\n  return {\n    numbers1: batch.execute() as Promise<[string, string, string, string]>,\n    numbers2: batch2.execute() as Promise<Array<string>>,\n    index,\n  };\n};\n\n/**\n * This function will create the LotteryItem and will resolve the promises\n * At the time the promises are awaited the request should already be done\n * @param numbers1Prom Promise with all numbers1 numbers\n * @param numbers2Prom Promise with all numbers2 numbers\n * @param index\n * @param finalNumbers\n */\nconst createLotteryItem = async (\n  numbers1Prom: Promise<[string, string, string, string]>,\n  numbers2Prom: Promise<Array<string>>,\n  index: number,\n  finalNumbers: Array<Lottery>\n) => {\n  const numbers1 = await numbers1Prom;\n  const numbers2Res = await numbers2Prom;\n  const numbers2: Array<number> = numbers2Res.map((n) => parseInt(n) / 1e18);\n\n  finalNumbers.push({\n    issueIndex: index,\n    numbers1,\n    numbers2,\n  });\n};\n\nexport const getIssueIndex = async (): Promise<number | { error: string; errorMessage: string }> => {\n  const lotteryContract = getContract(lotteryABI, LOTTERY_CONTRACT);\n  let issueIndex: number | undefined;\n  let retryIsseIndex = 0;\n  while (typeof issueIndex === \"undefined\" && retryIsseIndex <= 3) {\n    try {\n      // eslint-disable-next-line no-await-in-loop\n      issueIndex = Number(await lotteryContract.methods.issueIndex().call());\n    } catch (error) {\n      retryIsseIndex++;\n    }\n  }\n  if (typeof issueIndex === \"undefined\") {\n    return {\n      error: \"Internal Server Error\",\n      errorMessage: `Internal Server Error try again later`,\n    };\n  }\n  return issueIndex;\n};\n\nexport const getTicketPrice = (index: number): number => {\n  if (index <= 348) {\n    return 10;\n  }\n\n  return 1;\n};\n\n/**\n * @param index\n */\nexport const getRates = (index: number): Rates => {\n  if (index >= 0 && index <= 205) {\n    return ratesV1;\n  } if ((index >= 206 && index <= 348) || index >= 356) {\n    return ratesV2;\n  }\n\n  return rates;\n};\n\nexport const getAllLotteries = (issueIndex: number): Promise<Array<Lottery>> => {\n  const finalNumbersProm: Array<SingleLotteryReturn> = [];\n  for (let i = issueIndex; i >= 0; i--) {\n    if (i !== 349) {\n      finalNumbersProm.push(getSingleLotteryBatch(i));\n    }\n  }\n  return computeLotteries(finalNumbersProm);\n};\n\n/**\n * It happens that cloudfront rejects request.\n * To prevent missing lottery Items this retry function requests the lotteryItem again.\n * @param index\n * @param finalNumbers\n * @param retries number of retries\n */\nconst retry = async (index: number, finalNumbers: Array<Lottery>, retries: number) => {\n  let retrySuccess = false;\n  let retryCount = 0;\n  while (!retrySuccess && retryCount !== retries) {\n    retryCount++;\n    try {\n      const { numbers1: numbers1Prom, numbers2: numbers2Prom } = getSingleLotteryBatch(index);\n      // eslint-disable-next-line no-await-in-loop\n      await createLotteryItem(numbers1Prom, numbers2Prom, index, finalNumbers);\n      retrySuccess = true;\n    } catch (err) {\n      console.log(\"retry err:\", err);\n      console.log(\"retry count:\", retryCount);\n    }\n  }\n};\n\nexport const computeLotteries = async (finalNumbersProm: Array<SingleLotteryReturn>): Promise<Array<Lottery>> => {\n  const finalNumbers: Array<Lottery> = [];\n  try {\n    for (let i = 0; i < finalNumbersProm.length; i++) {\n      const { numbers1: numbers1Prom, numbers2: numbers2Prom, index } = finalNumbersProm[i];\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await createLotteryItem(numbers1Prom, numbers2Prom, index, finalNumbers);\n      } catch (error) {\n        // eslint-disable-next-line no-await-in-loop\n        await retry(index, finalNumbers, 3);\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n  return finalNumbers;\n};\n","export const ceilDecimal = (value: number, decimal = 0): number => {\n  let multiplier = 1;\n  if (decimal > 0) {\n    // eslint-disable-next-line no-restricted-properties\n    multiplier = Math.pow(10, decimal);\n  }\n  return Math.ceil(value * multiplier) / multiplier;\n};\n\nexport default ceilDecimal;\n","import { generateLotteryDate } from './generateLotteryDate'\nimport { getIssueIndex, getRates, getSingleLotteryBatch, getTicketPrice, SingleLottery } from './lotteryUtils'\nimport { ceilDecimal } from './mathUtils'\nimport { LOTTERY_CONTRACT } from './constants'\n\nexport const Lottery = async (\n  lotteryNumber: number\n): Promise<\n  | SingleLottery\n  | {\n      error?: string;\n      errorMessage?: string;\n      maxLotteryNumber?: number;\n    }\n> => {\n  const issueIndex = await getIssueIndex();\n  if (typeof issueIndex !== \"number\") {\n    return issueIndex;\n  }\n  // Check if lotteryNumber is out of range (small 0 or bigger last Lottery (Drawn))\n  if (lotteryNumber < 0 || lotteryNumber > issueIndex) {\n    return {\n      error: \"lotteryNumber out of range\",\n      errorMessage: `The LotteryNumber you provided is does not exists`,\n      maxLotteryNumber: issueIndex,\n    };\n  }\n  const { numbers1: numbers1Prom, numbers2: numbers2Prom } = getSingleLotteryBatch(lotteryNumber);\n  const numbers1 = await numbers1Prom;\n  const numbers2Res = await numbers2Prom;\n  const numbers2: Array<number> = numbers2Res.map((n) => parseInt(n) / 1e18);\n\n  const lotteryDate = generateLotteryDate(lotteryNumber);\n  const ratesToUse = getRates(lotteryNumber);\n  const ticketPrice = getTicketPrice(lotteryNumber);\n  const poolSize = numbers2[0];\n  const lottery: SingleLottery = {\n    lotteryNumber,\n    lotteryDate,\n    lotteryNumbers: numbers1.map((x) => Number(x)),\n    poolSize: ceilDecimal(poolSize, 2),\n    burned: ceilDecimal((poolSize / 100) * ratesToUse.burn, 2),\n    contractLink: `https://bscscan.com/address/${LOTTERY_CONTRACT}`,\n    jackpotTicket: numbers2[1] / ticketPrice,\n    match3Ticket: numbers2[2] / ticketPrice,\n    match2Ticket: numbers2[3] / ticketPrice,\n    match1Ticket: numbers2[4] ? numbers2[4] / ticketPrice : null,\n    poolJackpot: ceilDecimal((poolSize / 100) * ratesToUse.jackpot, 2),\n    poolMatch3: ceilDecimal((poolSize / 100) * ratesToUse.match3, 2),\n    poolMatch2: ceilDecimal((poolSize / 100) * ratesToUse.match2, 2),\n    poolMatch1: ratesToUse.match1 ? ceilDecimal((poolSize / 100) * ratesToUse.match1, 2) : null,\n  };\n  return lottery;\n};\nconst p = 1000;\nexport default p;","import { Lottery } from '../api/lottery/singleLottery'\n\nexport type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number) /* : Promise<DataResponse> */ => {\n  try {\n    // const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    // const data = await response.json()\n    const data = await Lottery(lotteryNumber)\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Input, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text color=\"primary\">{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 10%;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}\n          style={{justifyContent:\"center\"}}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"primary\">\n          {children}\n        </Text>\n        <Heading size=\"lg\" color=\"text\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n  & > svg{\n    fill: ${({ theme }) => theme.colors.primary}\n  }\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div style={{textAlign:\"center\"}}>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} className=\"imgBtn\">\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap color=\"primary\" href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CardBody, CardFooter, Heading, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody style={{padding: \"24px 24px 0 24px\"}}>\n          <CardHeading>\n            <div style={{marginBottom: \"2em\"}}>\n              <Timestamp timeValue={lotteryDate} />\n              <Heading size=\"md\" color=\"primary\" style={{textAlign:\"left\",width: \"53%\"}}>\n                Round #{lotteryNumber}\n              </Heading>\n            </div>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} Mumu`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber >= 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        /* if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else { */\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        // }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const {colors} = useContext(ThemeContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      backgroundColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 2,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: colors.secondary }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: colors.failure }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Heebo, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: colors.secondary, lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: colors.failure, lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: colors.text, lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length >= 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => isPoolSize ?theme.colors.secondary:theme.colors.failure};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text color=\"text\">{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text color=\"text\">{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Card, CardBody, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\" color=\"text\" style={{textAlign:\"center\"}}>{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <div style={{gridColumn: \"span 1\"}}> </div>\n        <PastLotteryRoundViewer />\n      <div style={{gridColumn: \"span 2\"}}> </div>\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />      \n      </SecondCardColumnWrapper>\n\t    <div style={{gridColumn: \"span 1\"}}> </div>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import { getAllLotteries, getIssueIndex, getRates } from './lotteryUtils'\nimport { ceilDecimal } from './mathUtils'\n\nexport const lotteryHistory = async () => {\n  const issueIndex = await getIssueIndex();\n  if (typeof issueIndex !== \"number\") {\n    throw new Error(\"IssueIndex not a number\");\n  }\n  const allLotteries = await getAllLotteries(issueIndex - 1);\n  const history: Array<any> = allLotteries.map(\n    (x): any => {\n      return {\n        lotteryNumber: x.issueIndex,\n        poolSize: ceilDecimal(x.numbers2[0], 2),\n        burned: ceilDecimal((x.numbers2[0] / 100) * getRates(x.issueIndex).burn, 2),\n      };\n    }\n  );\n  return history;\n};\n\nconst a = 1000;\n\nexport default a;\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\nimport { lotteryHistory } from '../../api/lottery/lotteryHistory'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    lotteryHistory()\n    .then((data) =>{\n      setHistoryData(data)\n      setHistoryError(false)\n    }\n  )\n},[])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Page>\n        <Hero />\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"primary\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}